#!/usr/bin/env bash

# The MIT License (MIT)
#
# Copyright (c) 2015 Gil Gon√ßalves
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -o noglob
set -o nounset
set -o errexit
set -o pipefail


SEARCH_STRING=$1
REPLACE_STRING=$2

NUM_ARGUMENTS=${#@}
if (( $NUM_ARGUMENTS <= 2 )); then
    FILES_WILDCARD='*'
else
    FILES_WILDCARD="${3}"
fi

function MAIN {
    local files_list=$(find . -writable -type f -iname "${FILES_WILDCARD}")
    local replace_string=$(echo $REPLACE_STRING | sed 's/+/\\+/g')

    local reset_text_attributes=$(tput sgr0)

    local preview_search_string="\\\e[91m$SEARCH_STRING$reset_text_attributes"
    local preview_replace_string="\\\e[92m$replace_string$reset_text_attributes"
    local preview_replace="$preview_search_string$preview_replace_string"
    local preview_output=$(
        echo -e $files_list | \
            xargs -l grep "$SEARCH_STRING" | \
            sed "s/$SEARCH_STRING/$preview_replace/g"
    )

    if [ -z "$preview_output" ]; then
        echo "No matches found"
        return
    fi

    echo "This is going to be replaced:"
    echo -e "$preview_output"
    echo "Are you sure you want to do that? [y/N]"
    read CONFIRM

    if [[ -z $CONFIRM && $CONFIRM == 'y' ]]; then
        SED_REGEX="s/$SEARCH_STRING/$REPLACE_STRING/g"
        echo -e $files_list | xargs -l sed -i "$SED_REGEX"
        echo "DONE"
    fi
}

MAIN

